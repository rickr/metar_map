{"version":3,"sources":["components/Dashboard/ZuluTime.js","components/Dashboard/AirportRow.js","components/Dashboard/AirportWarning.js","components/Dashboard/Airport.js","components/Dashboard/AirportRows.js","components/Dashboard/MetarAge.js","components/Dashboard/AirportInfo.js","components/Dashboard.js","components/Logs.js","components/Tools.js","App.js","index.js"],"names":["ZuluTime","props","className","style","marginTop","paddingTop","this","current_time","toUTCString","React","Component","AirportRow","children","AirportWarning","warning","key","Date","now","metar","wind_speed_kt","_text","push","wind_gust_kt","id","station_id","Airport","sendAirportData","updateSelectedAirport","onClick","flight_category","padding","marginBottom","AirportRows","flightCategory","items","metars","length","forEach","_i","airport","Object","values","flightCategoryCSS","flightCategoryToCSS","rawText","raw_text","item","rows","i","airportRows","start","airportsPerRow","end","slice","map","row","MetarAge","metarAgeTime","diff","Math","floor","last_updated","toString","padStart","AirportInfo","metar_text","taf_text","selectedAirport","airport_id","taf","airports","split","join","Dashboard","cycleDelay","afterClickCycleDelay","clearTimeout","state","airportCycleTimer","setTimeout","cycleAirports","setState","nextIndex","currentIndex","componentWillUnmount","airportComponents","currentTime","setInterval","metarCount","lastUpdated","Logs","componentDidMount","console","log","logLines","Tools","setLedState","ws","send","leds","ledState","ledStateString","ledStateCssClass","WebSocketClient","App","connect","window","location","host","WebSocket","subscribe","onopen","messageTypes","messageType","onmessage","evt","handleMessage","JSON","parse","data","message","stringify","type","payload","activeTab","isActive","tabName","makeActive","render","to","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.23a5754f.chunk.js","sourcesContent":["import React from 'react';\nimport '../../css/App.css';\n\nexport default class ZuluTime extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    return(\n      <div className='tile is-ancenstor'>\n        <div className='tile is-parent is-12' style={{ marginTop: '0px', paddingTop: '0px' }} >\n          <div className='tile is-child'>\n            <div className='has-text-centered is-size-4'>{this.props.current_time.toUTCString()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n","import React from 'react';\nimport '../../css/App.css';\n\nexport default class AirportRow extends React.Component {\n  render() {\n    return(\n      <div className=\"tile is-ancestor\">\n        {this.props.children}\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport '../../css/App.css';\n\nexport default class AirportWarning extends React.Component {\n  render(){\n    let warning = [];\n    let key = Date.now();\n    // We can probably be smarter about displaying warnings\n    // Icing, better represent wind, what else?\n    if(this.props.metar.wind_speed_kt && this.props.metar.wind_speed_kt._text > 20){ warning.push(<i key={key} className=\"fas fa-exclamation-triangle\"></i>) }\n    if(this.props.metar.wind_gust_kt && this.props.metar.wind_gust_kt._text > 20){ warning.push(<i key={key + 1} className=\"fas fa-exclamation-triangle\"></i>) }\n    if(this.props.metar.wind_gust_kt && this.props.metar.wind_gust_kt._text > 30){ warning.push(<i key={key + 2} className=\"fas fa-exclamation-triangle\"></i>) }\n\n    return(\n      <p id={this.props.metar.station_id} className=\"icon is-small has-text-warning\">\n        { warning }\n      </p>\n    )\n  }\n}\n","import React from 'react';\nimport '../../css/App.css';\nimport AirportWarning from './AirportWarning';\n\n// FIXME the box should cursor: pointer\nexport default class Airport extends React.Component {\n  sendAirportData = () => {\n    this.props.updateSelectedAirport(this.props.metar);\n  }\n\n  render() {\n    return(\n      <div className=\"tile is-parent has-text-centered\" onClick={this.sendAirportData}>\n        <article className={ `tile is-child box notification ${this.props.flight_category}` } style={{padding: '0 5px 5px 0'}}>\n          <p className=\"title is-4 has-text-centered\" style={{marginBottom: '5px'}}> {this.props.id} </p>\n          <AirportWarning metar={this.props.metar}/>\n        </article>\n      </div>\n    );\n  }\n}\n\n","import React from 'react';\nimport '../../css/App.css';\nimport AirportRow from './AirportRow';\nimport Airport from './Airport';\n\nexport default class AirportRows extends React.Component{\n  // Convert flight categories to a valid bulma css color class\n  flightCategoryToCSS(flightCategory){\n    if(flightCategory === \"VFR\"){\n      return 'is-success';\n    } else if(flightCategory === 'MVFR'){\n      return 'is-info';\n    } else if(flightCategory === 'IFR'){\n      return 'is-danger';\n    } else if(flightCategory === 'LIFR'){\n      return 'is-lifr';\n    } else {\n      return 'unknown-' + flightCategory;\n    }\n  };\n\n  render(){\n    let items = [];\n    if(this.props.metars.length === 0){ return false }\n    this.props.metars.forEach((metar, _i) => {\n      if(!metar){ return }\n      let airport = Object.values(metar.station_id);\n      let flightCategoryCSS = metar.flight_category ? this.flightCategoryToCSS(metar.flight_category._text) : 'unknown-category';\n      let rawText = Object.values(metar.raw_text);\n\n      let item = <Airport\n                    key={airport}\n                    id={airport}\n                    flight_category={flightCategoryCSS}\n                    raw_text={rawText}\n                    updateSelectedAirport={this.props.updateSelectedAirport}\n                    metar={metar}\n                 />\n\n      items.push(item)\n    });\n\n    let rows = [];\n    for(let i = 0; i < this.props.airportRows; i++){\n      let start = i * this.props.airportsPerRow;\n      let end = start + this.props.airportsPerRow\n      rows.push(items.slice(start, end));\n    }\n    return(rows.map((row, i) => { return(<AirportRow key={i}>{row}</AirportRow>) }))\n  }\n}\n","import React from 'react';\nimport '../../css/App.css';\n\nexport default class MetarAge extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  metarAgeTime = () => {\n    let diff = Math.floor((this.props.current_time - this.props.last_updated) / 1000);\n    let min = Math.floor(diff / 60);\n    let sec = Math.floor(diff % 60);\n    return min + \":\" + sec.toString().padStart(2, '0');\n  }\n\n  render(){\n    return(\n      <div className='tile is-ancenstor'>\n        <div className='tile is-parent is-12 has-text-grey-lighter' style={{ marginTop: '0px', paddingTop: '0px' }} >\n          <div className='tile is-child'>\n            <div className='is-pulled-right'>{this.metarAgeTime()} old</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport '../../css/App.css';\n\nexport default class AirportInfo extends React.Component {\n  render(){\n    let metar_text = null;\n    let taf_text = [];\n    if(this.props.selectedAirport){\n      let airport_id = this.props.selectedAirport.station_id._text;\n\n      metar_text = this.props.selectedAirport.raw_text._text;\n      let taf = this.props.airports[airport_id].taf\n      if(taf){\n        taf_text = taf.raw_text._text.split(/(?=TEMPO|BECMG|FM|PROB)/)\n      }\n    }else{\n      metar_text = ''\n    }\n\n    return(\n      <div className='has-text-centered'>\n        <pre>\n          <p>{metar_text}</p>\n          <p>{taf_text.join(\"\\n\")}</p>\n        </pre>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport '../css/App.css';\nimport ZuluTime from './Dashboard/ZuluTime';\nimport AirportRows from './Dashboard/AirportRows';\nimport MetarAge from './Dashboard/MetarAge';\nimport AirportInfo from './Dashboard/AirportInfo';\n\nexport default class Dashboard extends React.Component {\n  airportsPerRow = 7;\n  cycleDelay = 10 * 1000;\n  afterClickCycleDelay = 20 * 1000;\n\n  constructor(props){\n    super(props);\n    this.state = {\n      selectedAirport: null,\n      airportComponents: [],\n      currentIndex: 0,\n      airportCycleTimer: null,\n      currentTime: new Date()\n    };\n  };\n\n  // When an airport is clicked display the information for that airport\n  updateSelectedAirport = (metar) => {\n    clearTimeout(this.state.airportCycleTimer);\n    let airportCycleTimer = setTimeout(this.cycleAirports, this.afterClickCycleDelay)\n    this.setState({\n      airportCycleTimer: airportCycleTimer,\n      selectedAirport: metar\n    })\n  };\n\n  // FIXME this should show the first airport immediately\n  cycleAirports = () => {\n    if(!this.state.selectedAirport){\n      if(!this.props.metars){\n        // If we dont have any airports loaded keep checking\n        // at a short interval until we do\n        setTimeout(this.cycleAirports, 100);\n        return false\n      }\n    }\n\n    let nextIndex = this.state.currentIndex >= (this.props.metars.length - 1) ? 0 : this.state.currentIndex + 1\n    this.setState({ currentIndex: nextIndex });\n\n    let airportCycleTimer = setTimeout(this.cycleAirports, this.cycleDelay)\n    this.setState({\n      airportCycleTimer: airportCycleTimer,\n      selectedAirport: this.props.metars[this.state.currentIndex]\n    })\n  }\n\n  componentDidMount() {\n    setInterval(() => { this.setState({ currentTime : new Date() }) }, 1000)\n    this.cycleAirports();\n  }\n\n  // FIXME cancel currentTimes timers when unmounting\n  componentWillUnmount = () => {\n  }\n\n  render(){\n    return(\n      <div>\n        <ZuluTime current_time={this.state.currentTime} />\n        <AirportRows metars={this.props.metars} airportRows={this.props.metarCount / this.airportsPerRow} airportsPerRow={this.airportsPerRow} updateSelectedAirport={this.updateSelectedAirport}/>\n        <MetarAge current_time={this.state.currentTime} last_updated={new Date(this.props.lastUpdated)} />\n\n        <AirportInfo selectedAirport={this.state.selectedAirport} airports={this.props.airports}/>\n      </div>\n    );\n  };\n}\n","import React from 'react';\n\nexport default class Logs extends React.Component {\n  componentDidMount = () => {\n    console.log(\"Fetching logs\");\n  }\n\n  render(){\n    return(\n      <div>\n        <pre>{this.props.logLines.values}</pre>\n      </div>\n    );\n  };\n}\n","import React from 'react';\n\nexport default class Tools extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      ledState: true\n    }\n  }\n\n  setLedState = () => {\n    this.props.ws.send({ leds: !this.state.ledState });\n    this.setState({ ledState: !this.state.ledState });\n  }\n\n  ledStateString = () => { return (this.state.ledState === true ? 'Off' : 'On'); }\n  ledStateCssClass = () => {\n    let className = 'button is-large '\n    className += this.state.ledState === false ? 'is-success' : 'is-danger';\n    return className\n  }\n\n  render(){\n    return(\n      <div>\n        <button className={this.ledStateCssClass()} onClick={this.setLedState}>Turn Lights {this.ledStateString()}</button>\n      </div>\n    );\n  };\n}\n","import React from 'react';\nimport './css/App.css';\nimport Dashboard from './components/Dashboard';\nimport Logs from './components/Logs';\nimport Tools from './components/Tools';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n// WebSocketClient handles all aspects of our websocket and its data\n// and updates the state of our app\nclass WebSocketClient {\n  constructor(App){\n    this.App = App\n    this.messageTypes = ['metars', 'logs'];\n    this.connect();\n  };\n\n  connect = () => {\n    console.log(\"Opening WS to \" + window.location.host);\n    this.ws = new WebSocket('ws://' + window.location.host + '/metar.ws')\n  }\n\n  subscribe = () => {\n    this.ws.onopen = () => {\n      console.log('Connected');\n      this.messageTypes.forEach((messageType) => { this.send({subscribe: messageType}) });\n    }\n\n    this.ws.onmessage = (evt) => { this.handleMessage(JSON.parse(evt.data)) }\n  }\n\n  send = (message) => { this.ws.send(JSON.stringify(message)) }\n\n  handleMessage = (message) => {\n    switch(message.type){\n      case \"metars\":\n        console.log('RX METAR');\n        this.App.setState({\n          airports: message.payload,\n          metars: message.payload.metars.airports,\n          metarCount: message.payload.metars.airports.length,\n          lastUpdated: message.payload.metars.lastUpdated\n        });\n        break;\n      case \"logs\":\n        console.log('RX LOG');\n        this.App.setState({ logLines: message.payload, });\n        break;\n      default:\n        console.log('Unknown message type: ' + JSON.stringify(message));\n        break;\n    }\n  }\n}\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      ws: null,\n      airports: [],\n      metars: [],\n      metarCount: null,\n      lastUpdated: null,\n      logLines: []\n    };\n  }\n\n  componentDidMount = () => {\n    let ws = new WebSocketClient(this);\n    this.setState({\n      ws: ws,\n      activeTab: 'dashboard'\n    })\n    ws.subscribe();\n  }\n\n  isActive = (tabName) => { if(tabName === this.state.activeTab){ return 'is-active' } }\n\n  makeActive = (tabName) => { this.setState({activeTab: tabName}); }\n\n  render = () => {\n    return(\n      <Router>\n        <div className=\"tabs\">\n          <ul>\n            <li className={this.isActive('dashboard')}><Link onClick={() => this.makeActive('dashboard')} to=\"/\">Dashboard</Link></li>\n            <li className={this.isActive('logs')}><Link onClick={() => this.makeActive('logs')} to=\"/logs\">Logs</Link></li>\n            <li className={this.isActive('tools')}><Link onClick={() => this.makeActive('tools')} to=\"/tools\">Tools</Link></li>\n          </ul>\n        </div>\n        <Switch>\n            <Route exact path=\"/\"\n              render={(props) =>\n                <Dashboard ws={this.state.ws}\n                           airports={this.state.airports}\n                           metars={this.state.metars}\n                           metarCount={this.state.metarCount}\n                           lastUpdated={this.state.lastUpdated}\n                />\n              }>\n            </Route>\n            <Route path=\"/logs\">\n              <Logs logLines={this.state.logLines}/>\n            </Route>\n            <Route path=\"/tools\">\n              <Tools ws={this.state.ws}/>\n            </Route>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}