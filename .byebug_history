continue
d
n
@metar.class
@metar.count
@metar
continue
Metar.from_disk
@metar.count
@metar
n
@metar.class
@metar.first
@metar
@metar.first
@metar
continue
@metars.each { |m| puts m.value.raw_text }
@metars.first
@metars.second
@metars
@metars[:KBDR]
@metars[:KBDR].raw_text
@metars[:KBDR]
@metars
continue
@metars.key({'station_id': ['KBDR']})
@metars
quit
continue
@metars
d
d['station_id']
d
metar
d
data
metar
@metars.first[1]
@metars.first[0]
@metars.first.class
@metars.first.second
@metars.first.first
@metars.first.class
@metars.first
@metars.
@metars.second
@metars.first.class
@metars.first
@metars.class
@metars.clast
@metars
c
@metars.class
@metars
c
@metars.class
@metars
n
@metars.count
@metars
@metars.class
n
nnn
@metars.class
@metars.first
@metars
n
@metars
n
@metars
